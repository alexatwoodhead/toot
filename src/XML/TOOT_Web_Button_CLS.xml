<?xml version="1.0" encoding="UTF-8"?>
<Export generator="IRIS" version="26">
<Class name="TOOT.Web.Button">
<Super>%CSP.Page</Super>
<TimeCreated>67285,5675.891231186</TimeCreated>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    W "<!DOCTYPE html>"
    W !,"<html>"
    W !,"<style>"
    W !,".trb {"
    W !,"  background-color:white;"
    W !,"  cell-padding:2;"
    W !,"  cell-spacing:1"
    W !,"}"
    W !,"</style>"
    W !,"<head>"
    W !,"<scr","ipt>"
    W !,"  myTune = [];"
    W !,"  var mic="""""

    // Standardize access to media capture
    W !,"    getUserMedia=( navigator.getUserMedia ||"
    W !,"    navigator.webkitGetUserMedia || "
    W !,"    navigator.mediaDevices.getUserMedia || "
    W !,"    navigator.mozGetUserMedia || "
    W !,"    navigator.msGetUserMedia);"

    W !,"  function processTuneRequest(event) {"
    W !,"    if (event.data.size > 0) {"
    W !,"      document.getElementById(""btnTune"").enabled=false;"
    W !,"      myTune.push(event.data);"
    W !,"        result=document.getElementById('result');"
    W !,"        if (result!=null) {"
    W !,"          dl=new Date()"
    W !,"          result.innerHTML='New search started: '+((''+dl.getHours()).padStart(2,'0'))+':'+((''+dl.getMinutes()).padStart(2,'0'))+':'+((''+dl.getSeconds()).padStart(2,'0'));"
    W !,"        }"

    W !,"      fetch('TOOT.Web.FindTune.cls', {"
    W !,"        method: 'POST',"  
    W !,"        body: event.data"
    W !,"      }).then((response)=> {"
    W !,"           response.json().then((data)=> {"
    W !,"             displayData(data);"
    W !,"             console.log(data);"
    W !,"           }).catch((err)=>{"
    W !,"             console.log(""Error getting json data"",err);"
    W !,"           });"
    W !,"      }).catch((err)=>{"
    W !,"             console.log(""Error posting data"",err);"
    W !,"      });"
    W !,"    }" 
    W !,"  }"

    W !,"  function onMicCaptureSuccess(stream) {"
    W !,"     console.log(""H3.1"");"
    W !,"     mic=new MediaRecorder(stream);"
    W !,"     console.log(""H3.2"");"
    W !,"     mic.mimeType='audio/webm; codecs=opus'"
    W !,"     console.log(""H3.3"");"
    W !,"     mic.ondataavailable=processTuneRequest;"
    W !,"     console.log(""H3.4"");"
    W !,"   }"

    W !,"  function displayData(data) {"
    W !,"    result=document.getElementById('result');"
    W !,"    if (result==null) {return;}"
    W !,"    if (data!=null) {"
    W !,"       newHtml='';"
    W !,"       if (data.encoding!=null) {"
    W !,"         newHtml='<p>Note change list:'+data.encoding+'</p><br/>';"
    W !,"       }"
    W !,"       if (data.tunes!=null) {"
    W !,"         newHtml+='<table style=""background-color:navy""><tr class=""trb""><th>Artist</th><th>Song</th><th>Similarity</th></tr>';"
    W !,"        for (i=0;i<data.tunes.length;i++) {"
    W !,"           artist=data.tunes[i].artistOrBand"
    W !,"           name=data.tunes[i].name"
    W !,"           similarity=data.tunes[i].similarity"
    W !,"          newHtml+='<tr class=""trb""><td>'+artist+'</td><td>'+name+'</td><td>'+similarity+'</td></tr>';"
    W !,"         }"
    W !,"         newHtml+='</table>';"
    W !,"       }"
    W !,"       result.innerHTML=newHtml;"
    W !,"     } else {"
    W !,"       result.innerHTML='No results returned. Please try again';"
    W !,"     }"
    W !,"  }"

    W !,"const constraints = {"
    W !,"  'video': false,"
    W !,"  'audio': true"
    W !,"}"
    W !,"function getOpenMediaDevices() {"
    W !,"     if (typeof navigator.mediaDevices.getUserMedia === 'undefined') {"
    W !,"       if (navigator.getUserMedia) {"
    W !,"         return navigator.getUserMedia"
    W !,"       } else if (navigator.webkitGetUserMedia) {"
    W !,"         return navigator.webkitGetUserMedia"
    W !,"       } else if (navigator.mozGetUserMedia) {"
    W !,"         return navigator.mozGetUserMedia"
    W !,"       } else if (navigator.msGetUserMedia) {"
    W !,"         return navigator.msGetUserMedia"
    W !,"       }"
    W !,"     } else {"
    W !,"       return navigator.mediaDevices.getUserMedia"
    W !,"     }"
    W !,"}"

    // See reference: https://webrtc.org/getting-started/media-devices#using-asyncawait
    W !,"  function onbodyLoaded()"
    W !,"  {"
    W !,"    navigator.mediaDevices.getUserMedia(constraints).then(stream => {"
    W !,"      try {"
    W !,"        mic=new MediaRecorder(stream);"
    W !,"        mic.mimeType='audio/webm; codecs=opus'"
    W !,"        mic.ondataavailable=processTuneRequest;"
    W !,"      } catch (err){"
    W !,"        console.error('Error creating MediaRecorder.',err);"
    W !,"      }"
    W !,"    }).catch(error => {"
    W !,"      console.error('Error accessing media devices.', error);"
    W !,"      btn=document.getElementById(""btnTune"")"
    W !,"      if (btn!=null) {btn.enabled=false;}"
    W !,"      txt=document.getElementById(""result"")"
    W !,"      if (txt!=null) {txt.innerHTML="""
    W "<p>This application requires Microphone access. Please ensure:</p><ol>"
    W "<li>Microphone access for applications is enabled in the operating system</li>"
    W "<li>Granted by the web browser, if prompted, for this site</li>"
    W "<li>Access is via secure HTTPS link and not insecure HTTP</li>"
    W "</ol>Thank you for understanding and enabling this feature.""};"
    W !,"    });"
    W !,"  }"

    W !,"  function onMicCaptureError(e) {"
    W !,"    console.error('mic record error:', e);"
    W !,"  }"

    W !,"  function stopRecording() {"
    W !,"    console.log(""stopped recording"")"
    W !,"    if (mic!=null) {"
    W !,"      mic.stop();"
    W !,"      myTune"
    W !,"    }"
    W !,"  }"
    
    W !,"  function startRecording() {"
    W !,"    console.log(""started recording"")"
    W !,"    if (mic!=null) {"
    W !,"      mic.start();"
    W !,"    }"
    W !,"  }"

    W !,"</scr","ipt>"
    W !,"</head>"
    W !,"<body onload=""onbodyLoaded()"">"

    // Ref: Used emoji character map: https://www.w3schools.com/charsets/ref_emoji_av.asp
    W "Find my tune: <Button id=""btnTune"" enabled=""false""  onMouseDown=""startRecording()"" onclick=""stopRecording()"" style=""width:200px;height:90px;font-size:50px"">&#x1F39C;&#x1F39D;&#x1F3A4;</Button>"
    W !,"<hr/>"
    W !,"<div id=""result""></div>"
    W !,"</body>"
    W !,"</html>"
    return $$$OK
]]></Implementation>
</Method>
</Class>
</Export>
